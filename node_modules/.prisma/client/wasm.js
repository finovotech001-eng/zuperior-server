
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  country: 'country',
  role: 'role',
  status: 'status',
  emailVerified: 'emailVerified',
  lastLoginAt: 'lastLoginAt',
  createdAt: 'createdAt'
};

exports.Prisma.KYCScalarFieldEnum = {
  id: 'id',
  isDocumentVerified: 'isDocumentVerified',
  isAddressVerified: 'isAddressVerified',
  verificationStatus: 'verificationStatus',
  documentReference: 'documentReference',
  addressReference: 'addressReference',
  amlReference: 'amlReference',
  documentSubmittedAt: 'documentSubmittedAt',
  addressSubmittedAt: 'addressSubmittedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.MT5AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  userId: 'userId',
  password: 'password',
  leverage: 'leverage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MT5TransactionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  comment: 'comment',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  userId: 'userId',
  processedBy: 'processedBy',
  processedAt: 'processedAt',
  mt5AccountId: 'mt5AccountId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountType: 'accountType',
  balance: 'balance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  amount: 'amount',
  currency: 'currency',
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  description: 'description',
  metadata: 'metadata',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepositScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  currency: 'currency',
  method: 'method',
  paymentMethod: 'paymentMethod',
  transactionHash: 'transactionHash',
  proofFileUrl: 'proofFileUrl',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  depositAddress: 'depositAddress',
  externalTransactionId: 'externalTransactionId',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WithdrawalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  currency: 'currency',
  method: 'method',
  paymentMethod: 'paymentMethod',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  walletAddress: 'walletAddress',
  externalTransactionId: 'externalTransactionId',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  adminId: 'adminId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  oldValues: 'oldValues',
  newValues: 'newValues',
  createdAt: 'createdAt'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  permissions: 'permissions',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentMethodScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  address: 'address',
  currency: 'currency',
  network: 'network',
  status: 'status',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  KYC: 'KYC',
  MT5Account: 'MT5Account',
  MT5Transaction: 'MT5Transaction',
  Account: 'Account',
  Transaction: 'Transaction',
  Deposit: 'Deposit',
  Withdrawal: 'Withdrawal',
  ActivityLog: 'ActivityLog',
  SystemSetting: 'SystemSetting',
  Role: 'Role',
  PaymentMethod: 'PaymentMethod',
  UserRole: 'UserRole'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/akhilesh/Desktop/PycharmProjects/P Projects/zuperior-server/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/akhilesh/Desktop/PycharmProjects/P Projects/zuperior-server/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": true,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// server/prisma/schema.prisma\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id             String          @id @default(uuid())\n  clientId       String          @unique @default(cuid())\n  email          String          @unique\n  password       String // Hashed password\n  name           String?\n  phone          String?\n  country        String?\n  role           String          @default(\"user\") // \"admin\", \"user\", \"moderator\"\n  status         String          @default(\"active\") // \"active\", \"banned\", \"suspended\"\n  emailVerified  Boolean         @default(false)\n  lastLoginAt    DateTime?\n  createdAt      DateTime        @default(now())\n  accounts       Account[]       @relation(\"accounts\")\n  transactions   Transaction[]   @relation(\"transactions\")\n  kyc            KYC?            @relation(\"kyc\")\n  mt5Accounts    MT5Account[]    @relation(\"mt5Accounts\")\n  deposits       Deposit[]       @relation(\"deposits\")\n  withdrawals    Withdrawal[]    @relation(\"withdrawals\")\n  activityLogs   ActivityLog[]   @relation(\"activityLogs\")\n  paymentMethods PaymentMethod[] @relation(\"paymentMethods\")\n}\n\nmodel KYC {\n  id                  String    @id @default(uuid())\n  isDocumentVerified  Boolean   @default(false)\n  isAddressVerified   Boolean   @default(false)\n  verificationStatus  String    @default(\"Pending\")\n  documentReference   String?\n  addressReference    String?\n  amlReference        String?\n  documentSubmittedAt DateTime?\n  addressSubmittedAt  DateTime?\n  rejectionReason     String?\n  createdAt           DateTime  @default(now())\n  updatedAt           DateTime  @updatedAt\n  user                User      @relation(\"kyc\", fields: [userId], references: [id])\n  userId              String    @unique\n}\n\nmodel MT5Account {\n  id        String   @id @default(uuid())\n  accountId String   @unique // MT5 Account ID from API response\n  userId    String // Link to User table\n  password  String?\n  leverage  Int?\n  user      User     @relation(\"mt5Accounts\", fields: [userId], references: [id])\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  mt5Transactions MT5Transaction[] @relation(\"mt5Transactions\")\n  deposits        Deposit[]        @relation(\"deposits\")\n  withdrawals     Withdrawal[]     @relation(\"withdrawals\")\n}\n\nmodel MT5Transaction {\n  id            String     @id @default(uuid())\n  type          String // \"Deposit\", \"Withdrawal\", \"Internal Transfer In\", \"Internal Transfer Out\"\n  amount        Float\n  currency      String     @default(\"USD\")\n  status        String     @default(\"pending\") // \"pending\", \"completed\", \"failed\", \"rejected\"\n  paymentMethod String? // \"crypto\", \"card\", \"bank\", \"manual\", \"internal_transfer\"\n  transactionId String? // External payment gateway ID, transaction hash, or internal transfer ID\n  comment       String?\n  depositId     String? // Link to Deposit record\n  withdrawalId  String? // Link to Withdrawal record\n  userId        String? // User who made the transaction\n  processedBy   String? // Admin who processed (approved/rejected)\n  processedAt   DateTime? // When the transaction was processed\n  mt5Account    MT5Account @relation(\"mt5Transactions\", fields: [mt5AccountId], references: [id])\n  mt5AccountId  String\n  createdAt     DateTime   @default(now())\n  updatedAt     DateTime   @updatedAt\n\n  @@index([mt5AccountId])\n  @@index([userId])\n  @@index([depositId])\n  @@index([withdrawalId])\n  @@index([status])\n  @@index([type])\n}\n\n// Add the missing Account Model\nmodel Account {\n  id          String   @id @default(uuid())\n  userId      String\n  user        User     @relation(\"accounts\", fields: [userId], references: [id])\n  accountType String // e.g., 'trading', 'wallet'\n  balance     Float    @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\n// Comprehensive Transaction Model for all transaction types\nmodel Transaction {\n  id            String      @id @default(uuid())\n  userId        String\n  user          User        @relation(\"transactions\", fields: [userId], references: [id])\n  type          String // 'deposit', 'withdrawal', 'transfer'\n  amount        Float\n  currency      String      @default(\"USD\")\n  status        String      @default(\"pending\") // \"pending\", \"completed\", \"failed\", \"rejected\"\n  paymentMethod String?\n  transactionId String?\n  description   String?\n  metadata      String? // JSON string for additional data\n  depositId     String?\n  deposit       Deposit?    @relation(\"transactions\", fields: [depositId], references: [id])\n  withdrawalId  String?\n  withdrawal    Withdrawal? @relation(\"transactions\", fields: [withdrawalId], references: [id])\n  createdAt     DateTime    @default(now())\n  updatedAt     DateTime    @updatedAt\n\n  @@index([userId])\n  @@index([depositId])\n  @@index([withdrawalId])\n  @@index([status])\n  @@index([type])\n}\n\n// Comprehensive Deposit Model\nmodel Deposit {\n  id                    String        @id @default(uuid())\n  userId                String\n  user                  User          @relation(\"deposits\", fields: [userId], references: [id])\n  mt5AccountId          String\n  mt5Account            MT5Account    @relation(\"deposits\", fields: [mt5AccountId], references: [id])\n  amount                Float\n  currency              String        @default(\"USD\")\n  method                String // \"manual\", \"crypto\", \"card\", \"bank\"\n  paymentMethod         String?\n  transactionHash       String? // User provided transaction hash\n  proofFileUrl          String? // Uploaded proof file URL\n  bankDetails           String? // JSON string for bank details\n  cryptoAddress         String? // Crypto address for deposit\n  depositAddress        String? // System deposit address\n  externalTransactionId String? // External payment gateway transaction ID\n  status                String        @default(\"pending\") // \"pending\", \"approved\", \"rejected\", \"failed\"\n  rejectionReason       String?\n  approvedBy            String? // Admin user ID who approved\n  approvedAt            DateTime?\n  rejectedAt            DateTime?\n  processedAt           DateTime?\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  transactions          Transaction[] @relation(\"transactions\")\n\n  @@index([userId])\n  @@index([mt5AccountId])\n  @@index([status])\n  @@index([createdAt])\n}\n\n// Comprehensive Withdrawal Model\nmodel Withdrawal {\n  id                    String        @id @default(uuid())\n  userId                String\n  user                  User          @relation(\"withdrawals\", fields: [userId], references: [id])\n  mt5AccountId          String // MT5 Account ID\n  mt5Account            MT5Account    @relation(\"withdrawals\", fields: [mt5AccountId], references: [id])\n  amount                Float\n  currency              String        @default(\"USD\")\n  method                String // \"bank\", \"crypto\", \"card\"\n  paymentMethod         String?\n  bankDetails           String? // JSON string for bank details\n  cryptoAddress         String? // Crypto wallet address\n  walletAddress         String? // Alternative wallet address field\n  externalTransactionId String? // External payment gateway transaction ID\n  status                String        @default(\"pending\") // \"pending\", \"approved\", \"rejected\", \"failed\"\n  rejectionReason       String?\n  approvedBy            String? // Admin user ID who approved\n  approvedAt            DateTime?\n  rejectedAt            DateTime?\n  processedAt           DateTime?\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  transactions          Transaction[] @relation(\"transactions\")\n\n  @@index([userId])\n  @@index([mt5AccountId])\n  @@index([status])\n  @@index([createdAt])\n}\n\n// Activity Log Model for admin actions\nmodel ActivityLog {\n  id        String   @id @default(uuid())\n  userId    String? // User affected by the action\n  adminId   String // Admin who performed the action\n  admin     User     @relation(\"activityLogs\", fields: [adminId], references: [id])\n  action    String // \"create\", \"update\", \"delete\", \"approve\", \"reject\"\n  entity    String // \"user\", \"deposit\", \"withdrawal\", \"kyc\"\n  entityId  String? // ID of the affected entity\n  ipAddress String? // IP address of admin\n  userAgent String? // User agent of admin\n  oldValues String? // JSON string of old values\n  newValues String? // JSON string of new values\n  createdAt DateTime @default(now())\n}\n\n// System Settings Model for admin configurations\nmodel SystemSetting {\n  id          String   @id @default(uuid())\n  key         String   @unique // Setting key\n  value       String // JSON string value\n  category    String // \"smtp\", \"payment\", \"limits\", \"general\"\n  description String? // Description of the setting\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\n// Role Model for user roles and permissions\nmodel Role {\n  id          String   @id @default(uuid())\n  name        String   @unique // Role name\n  permissions String // JSON array of permissions\n  description String? // Role description\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\n// Payment Method Model for user wallet addresses\nmodel PaymentMethod {\n  id              String    @id @default(uuid())\n  userId          String\n  user            User      @relation(\"paymentMethods\", fields: [userId], references: [id])\n  address         String // Wallet address\n  currency        String    @default(\"USDT\")\n  network         String    @default(\"TRC20\")\n  status          String    @default(\"pending\") // \"pending\", \"approved\", \"rejected\"\n  approvedAt      DateTime?\n  approvedBy      String? // Admin user ID who approved\n  rejectionReason String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  @@index([userId])\n  @@index([status])\n}\n\n// User Role Model for many-to-many relationship\nmodel UserRole {\n  id         String   @id @default(uuid())\n  userId     String\n  roleId     String\n  assignedAt DateTime @default(now())\n  assignedBy String // Admin who assigned the role\n}\n",
  "inlineSchemaHash": "6b459ee45041ab04cac2dd7f378d84b1e7ab1796d284234daa3112a1717f94c4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"accounts\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"},{\"name\":\"kyc\",\"kind\":\"object\",\"type\":\"KYC\",\"relationName\":\"kyc\"},{\"name\":\"mt5Accounts\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"mt5Accounts\"},{\"name\":\"deposits\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"deposits\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"withdrawals\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"activityLogs\"},{\"name\":\"paymentMethods\",\"kind\":\"object\",\"type\":\"PaymentMethod\",\"relationName\":\"paymentMethods\"}],\"dbName\":null},\"KYC\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDocumentVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isAddressVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verificationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amlReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentSubmittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"addressSubmittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"kyc\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"MT5Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leverage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"mt5Accounts\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mt5Transactions\",\"kind\":\"object\",\"type\":\"MT5Transaction\",\"relationName\":\"mt5Transactions\"},{\"name\":\"deposits\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"deposits\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"withdrawals\"}],\"dbName\":null},\"MT5Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"mt5Transactions\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"accounts\"},{\"name\":\"accountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"transactions\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deposit\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"transactions\"},{\"name\":\"withdrawalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawal\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"transactions\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Deposit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"deposits\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"deposits\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proofFileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cryptoAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"}],\"dbName\":null},\"Withdrawal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"withdrawals\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"withdrawals\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cryptoAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"walletAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"}],\"dbName\":null},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"activityLogs\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"SystemSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentMethod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"paymentMethods\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"network\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

