
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  clientId: 'clientId',
  email: 'email',
  password: 'password',
  name: 'name',
  phone: 'phone',
  country: 'country',
  createdAt: 'createdAt',
  emailVerified: 'emailVerified',
  lastLoginAt: 'lastLoginAt',
  role: 'role',
  status: 'status'
};

exports.Prisma.KYCScalarFieldEnum = {
  id: 'id',
  isDocumentVerified: 'isDocumentVerified',
  isAddressVerified: 'isAddressVerified',
  verificationStatus: 'verificationStatus',
  documentReference: 'documentReference',
  addressReference: 'addressReference',
  amlReference: 'amlReference',
  documentSubmittedAt: 'documentSubmittedAt',
  addressSubmittedAt: 'addressSubmittedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.MT5AccountScalarFieldEnum = {
  id: 'id',
  accountId: 'accountId',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  password: 'password',
  leverage: 'leverage'
};

exports.Prisma.MT5TransactionScalarFieldEnum = {
  id: 'id',
  type: 'type',
  amount: 'amount',
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  comment: 'comment',
  mt5AccountId: 'mt5AccountId',
  createdAt: 'createdAt',
  currency: 'currency',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  userId: 'userId',
  processedBy: 'processedBy',
  processedAt: 'processedAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  accountType: 'accountType',
  balance: 'balance',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TransactionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  amount: 'amount',
  status: 'status',
  currency: 'currency',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  description: 'description',
  metadata: 'metadata',
  depositId: 'depositId',
  withdrawalId: 'withdrawalId',
  updatedAt: 'updatedAt',
  createdAt: 'createdAt'
};

exports.Prisma.DepositScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  currency: 'currency',
  method: 'method',
  paymentMethod: 'paymentMethod',
  transactionHash: 'transactionHash',
  proofFileUrl: 'proofFileUrl',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  depositAddress: 'depositAddress',
  externalTransactionId: 'externalTransactionId',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  processedAt: 'processedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.WithdrawalScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  amount: 'amount',
  method: 'method',
  bankDetails: 'bankDetails',
  cryptoAddress: 'cryptoAddress',
  status: 'status',
  rejectionReason: 'rejectionReason',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectedAt: 'rejectedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  currency: 'currency',
  externalTransactionId: 'externalTransactionId',
  paymentMethod: 'paymentMethod',
  processedAt: 'processedAt',
  walletAddress: 'walletAddress'
};

exports.Prisma.ActivityLogScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  adminId: 'adminId',
  action: 'action',
  entity: 'entity',
  entityId: 'entityId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  oldValues: 'oldValues',
  newValues: 'newValues',
  createdAt: 'createdAt'
};

exports.Prisma.SystemSettingScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  category: 'category',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  permissions: 'permissions',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PaymentMethodScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  address: 'address',
  currency: 'currency',
  network: 'network',
  status: 'status',
  submittedAt: 'submittedAt',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  roleId: 'roleId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy'
};

exports.Prisma.DefaultMT5AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  mt5AccountId: 'mt5AccountId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InstrumentScalarFieldEnum = {
  id: 'id',
  symbol: 'symbol',
  name: 'name',
  description: 'description',
  category: 'category',
  group: 'group',
  digits: 'digits',
  contractSize: 'contractSize',
  minVolume: 'minVolume',
  maxVolume: 'maxVolume',
  volumeStep: 'volumeStep',
  spread: 'spread',
  isActive: 'isActive',
  tradingHours: 'tradingHours',
  lastUpdated: 'lastUpdated',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RefreshTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  revoked: 'revoked'
};

exports.Prisma.UserFavoriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  instrumentId: 'instrumentId',
  sortOrder: 'sortOrder',
  addedAt: 'addedAt'
};

exports.Prisma.AdminScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email',
  password_hash: 'password_hash',
  admin_role: 'admin_role',
  is_active: 'is_active',
  last_login: 'last_login',
  login_attempts: 'login_attempts',
  locked_until: 'locked_until',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Admin_login_logScalarFieldEnum = {
  id: 'id',
  admin_id: 'admin_id',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  location: 'location',
  device: 'device',
  browser: 'browser',
  os: 'os',
  success: 'success',
  failure_reason: 'failure_reason',
  created_at: 'created_at'
};

exports.Prisma.Balance_operation_historyScalarFieldEnum = {
  id: 'id',
  admin_id: 'admin_id',
  mt5_login: 'mt5_login',
  operation_type: 'operation_type',
  amount: 'amount',
  currency: 'currency',
  description: 'description',
  status: 'status',
  error_message: 'error_message',
  ip_address: 'ip_address',
  user_agent: 'user_agent',
  created_at: 'created_at'
};

exports.Prisma.Chat_conversationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  user_name: 'user_name',
  user_email: 'user_email',
  admin_id: 'admin_id',
  status: 'status',
  priority: 'priority',
  subject: 'subject',
  last_message_at: 'last_message_at',
  created_at: 'created_at',
  updated_at: 'updated_at',
  closed_at: 'closed_at',
  closed_by: 'closed_by',
  tags: 'tags',
  unread_count_admin: 'unread_count_admin',
  unread_count_user: 'unread_count_user'
};

exports.Prisma.Chat_messagesScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  sender_id: 'sender_id',
  sender_name: 'sender_name',
  sender_type: 'sender_type',
  message_type: 'message_type',
  content: 'content',
  metadata: 'metadata',
  is_read: 'is_read',
  read_at: 'read_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Chat_participantsScalarFieldEnum = {
  id: 'id',
  conversation_id: 'conversation_id',
  user_id: 'user_id',
  user_name: 'user_name',
  user_type: 'user_type',
  role: 'role',
  joined_at: 'joined_at',
  left_at: 'left_at',
  is_active: 'is_active'
};

exports.Prisma.Group_commission_structuresScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  structure_name: 'structure_name',
  usd_per_lot: 'usd_per_lot',
  spread_share_percentage: 'spread_share_percentage',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ib_adminScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  is_active: 'is_active',
  last_login: 'last_login',
  login_attempts: 'login_attempts',
  locked_until: 'locked_until',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ib_requestsScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  password_hash: 'password_hash',
  status: 'status',
  ib_type: 'ib_type',
  submitted_at: 'submitted_at',
  approved_at: 'approved_at',
  usd_per_lot: 'usd_per_lot',
  spread_percentage_per_lot: 'spread_percentage_per_lot',
  admin_comments: 'admin_comments',
  group_id: 'group_id',
  structure_id: 'structure_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Manual_gatewayScalarFieldEnum = {
  id: 'id',
  type: 'type',
  name: 'name',
  details: 'details',
  icon_url: 'icon_url',
  qr_code_url: 'qr_code_url',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Mt5_groupsScalarFieldEnum = {
  id: 'id',
  group_id: 'group_id',
  name: 'name',
  description: 'description',
  synced_at: 'synced_at',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Payment_gatewayScalarFieldEnum = {
  id: 'id',
  wallet_name: 'wallet_name',
  deposit_wallet_address: 'deposit_wallet_address',
  api_key: 'api_key',
  secret_key: 'secret_key',
  gateway_type: 'gateway_type',
  is_active: 'is_active',
  description: 'description',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SymbolsScalarFieldEnum = {
  id: 'id',
  symbol_name: 'symbol_name',
  description: 'description',
  symbol_type: 'symbol_type',
  group_name: 'group_name',
  digits: 'digits',
  spread: 'spread',
  contract_size: 'contract_size',
  profit_mode: 'profit_mode',
  enable: 'enable',
  swap_mode: 'swap_mode',
  swap_long: 'swap_long',
  swap_short: 'swap_short',
  swap3_day: 'swap3_day',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ib_group_assignmentsScalarFieldEnum = {
  id: 'id',
  ib_request_id: 'ib_request_id',
  group_id: 'group_id',
  group_name: 'group_name',
  structure_id: 'structure_id',
  structure_name: 'structure_name',
  usd_per_lot: 'usd_per_lot',
  spread_share_percentage: 'spread_share_percentage',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Ib_trade_historyScalarFieldEnum = {
  id: 'id',
  order_id: 'order_id',
  account_id: 'account_id',
  user_id: 'user_id',
  ib_request_id: 'ib_request_id',
  symbol: 'symbol',
  order_type: 'order_type',
  volume_lots: 'volume_lots',
  open_price: 'open_price',
  close_price: 'close_price',
  profit: 'profit',
  ib_commission: 'ib_commission',
  take_profit: 'take_profit',
  stop_loss: 'stop_loss',
  created_at: 'created_at',
  updated_at: 'updated_at',
  synced_at: 'synced_at',
  group_id: 'group_id'
};

exports.Prisma.Support_ticketsScalarFieldEnum = {
  id: 'id',
  ticket_no: 'ticket_no',
  parent_id: 'parent_id',
  title: 'title',
  description: 'description',
  ticket_type: 'ticket_type',
  status: 'status',
  priority: 'priority',
  assigned_to: 'assigned_to',
  account_number: 'account_number',
  tags: 'tags',
  created_at: 'created_at',
  updated_at: 'updated_at',
  last_reply_at: 'last_reply_at',
  closed_at: 'closed_at',
  closed_by: 'closed_by'
};

exports.Prisma.Support_ticket_repliesScalarFieldEnum = {
  id: 'id',
  ticket_id: 'ticket_id',
  reply_id: 'reply_id',
  sender_id: 'sender_id',
  sender_name: 'sender_name',
  sender_type: 'sender_type',
  content: 'content',
  is_internal: 'is_internal',
  attachments: 'attachments',
  created_at: 'created_at',
  updated_at: 'updated_at',
  is_read: 'is_read'
};

exports.Prisma.Support_articlesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  category: 'category',
  tags: 'tags',
  views: 'views',
  helpful_count: 'helpful_count',
  not_helpful_count: 'not_helpful_count',
  is_published: 'is_published',
  author_id: 'author_id',
  created_at: 'created_at',
  updated_at: 'updated_at',
  published_at: 'published_at'
};

exports.Prisma.Support_faqScalarFieldEnum = {
  id: 'id',
  question: 'question',
  answer: 'answer',
  category: 'category',
  tags: 'tags',
  helpful_count: 'helpful_count',
  not_helpful_count: 'not_helpful_count',
  display_order: 'display_order',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Support_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description',
  icon: 'icon',
  display_order: 'display_order',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.Support_repliesScalarFieldEnum = {
  id: 'id',
  ticket_id: 'ticket_id',
  sender_id: 'sender_id',
  sender_name: 'sender_name',
  sender_type: 'sender_type',
  content: 'content',
  is_internal: 'is_internal',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  KYC: 'KYC',
  MT5Account: 'MT5Account',
  MT5Transaction: 'MT5Transaction',
  Account: 'Account',
  Transaction: 'Transaction',
  Deposit: 'Deposit',
  Withdrawal: 'Withdrawal',
  ActivityLog: 'ActivityLog',
  SystemSetting: 'SystemSetting',
  Role: 'Role',
  PaymentMethod: 'PaymentMethod',
  UserRole: 'UserRole',
  DefaultMT5Account: 'DefaultMT5Account',
  Instrument: 'Instrument',
  RefreshToken: 'RefreshToken',
  UserFavorite: 'UserFavorite',
  admin: 'admin',
  admin_login_log: 'admin_login_log',
  balance_operation_history: 'balance_operation_history',
  chat_conversations: 'chat_conversations',
  chat_messages: 'chat_messages',
  chat_participants: 'chat_participants',
  group_commission_structures: 'group_commission_structures',
  ib_admin: 'ib_admin',
  ib_requests: 'ib_requests',
  manual_gateway: 'manual_gateway',
  mt5_groups: 'mt5_groups',
  payment_gateway: 'payment_gateway',
  symbols: 'symbols',
  ib_group_assignments: 'ib_group_assignments',
  ib_trade_history: 'ib_trade_history',
  support_tickets: 'support_tickets',
  support_ticket_replies: 'support_ticket_replies',
  support_articles: 'support_articles',
  support_faq: 'support_faq',
  support_categories: 'support_categories',
  support_replies: 'support_replies'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "D:\\CRM Dashboard\\zuperior-server\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "D:\\CRM Dashboard\\zuperior-server\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                String             @id @default(uuid())\n  clientId          String             @unique @default(cuid())\n  email             String             @unique\n  password          String\n  name              String?\n  phone             String?\n  country           String?\n  createdAt         DateTime           @default(now())\n  emailVerified     Boolean            @default(false)\n  lastLoginAt       DateTime?\n  role              String             @default(\"user\")\n  status            String             @default(\"active\")\n  accounts          Account[]          @relation(\"accounts\")\n  activityLogs      ActivityLog[]      @relation(\"activityLogs\")\n  DefaultMT5Account DefaultMT5Account?\n  deposits          Deposit[]          @relation(\"deposits\")\n  kyc               KYC?               @relation(\"kyc\")\n  mt5Accounts       MT5Account[]       @relation(\"mt5Accounts\")\n  RefreshToken      RefreshToken[]\n  transactions      Transaction[]      @relation(\"transactions\")\n  UserFavorite      UserFavorite[]\n  withdrawals       Withdrawal[]       @relation(\"withdrawals\")\n}\n\nmodel KYC {\n  id                  String    @id @default(uuid())\n  isDocumentVerified  Boolean   @default(false)\n  isAddressVerified   Boolean   @default(false)\n  verificationStatus  String    @default(\"Pending\")\n  documentReference   String?\n  addressReference    String?\n  amlReference        String?\n  documentSubmittedAt DateTime?\n  addressSubmittedAt  DateTime?\n  rejectionReason     String?\n  createdAt           DateTime  @default(now())\n  updatedAt           DateTime  @updatedAt\n  userId              String    @unique\n  user                User      @relation(\"kyc\", fields: [userId], references: [id])\n}\n\nmodel MT5Account {\n  id                String              @id @default(uuid())\n  accountId         String              @unique\n  userId            String?\n  createdAt         DateTime            @default(now())\n  updatedAt         DateTime            @updatedAt\n  password          String?\n  leverage          Int?\n  DefaultMT5Account DefaultMT5Account[]\n  deposits          Deposit[]           @relation(\"deposits\")\n  user              User?               @relation(\"mt5Accounts\", fields: [userId], references: [id])\n  mt5Transactions   MT5Transaction[]    @relation(\"mt5Transactions\")\n  withdrawals       Withdrawal[]        @relation(\"withdrawals\")\n}\n\nmodel MT5Transaction {\n  id            String     @id @default(uuid()) @db.VarChar\n  type          String     @db.VarChar\n  amount        Float\n  status        String?    @db.VarChar\n  paymentMethod String?    @db.VarChar\n  transactionId String?    @db.VarChar\n  comment       String?    @db.VarChar\n  mt5AccountId  String     @db.VarChar\n  createdAt     DateTime?  @default(now()) @db.Timestamptz(6)\n  currency      String?    @db.VarChar\n  depositId     String?    @db.VarChar\n  withdrawalId  String?    @db.VarChar\n  userId        String?    @db.VarChar\n  processedBy   String?    @db.VarChar\n  processedAt   DateTime?  @db.Timestamptz(6)\n  updatedAt     DateTime?  @default(now()) @updatedAt @db.Timestamptz(6)\n  mt5Account    MT5Account @relation(\"mt5Transactions\", fields: [mt5AccountId], references: [id], onDelete: NoAction, onUpdate: NoAction)\n\n  @@index([depositId], map: \"ix_MT5Transaction_depositId\")\n  @@index([mt5AccountId], map: \"ix_MT5Transaction_mt5AccountId\")\n  @@index([status], map: \"ix_MT5Transaction_status\")\n  @@index([type], map: \"ix_MT5Transaction_type\")\n  @@index([userId], map: \"ix_MT5Transaction_userId\")\n  @@index([withdrawalId], map: \"ix_MT5Transaction_withdrawalId\")\n}\n\nmodel Account {\n  id          String   @id @default(uuid())\n  userId      String\n  accountType String\n  balance     Float    @default(0)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  user        User     @relation(\"accounts\", fields: [userId], references: [id])\n}\n\nmodel Transaction {\n  id            String      @id @default(uuid())\n  userId        String\n  type          String\n  amount        Float\n  status        String      @default(\"pending\")\n  currency      String      @default(\"USD\")\n  paymentMethod String?\n  transactionId String?\n  description   String?\n  metadata      String?\n  depositId     String?\n  withdrawalId  String?\n  updatedAt     DateTime    @updatedAt\n  createdAt     DateTime    @default(now())\n  deposit       Deposit?    @relation(\"transactions\", fields: [depositId], references: [id])\n  user          User        @relation(\"transactions\", fields: [userId], references: [id])\n  withdrawal    Withdrawal? @relation(\"transactions\", fields: [withdrawalId], references: [id])\n\n  @@index([userId])\n  @@index([depositId])\n  @@index([withdrawalId])\n  @@index([status])\n  @@index([type])\n}\n\nmodel Deposit {\n  id                    String        @id @default(uuid())\n  userId                String\n  mt5AccountId          String\n  amount                Float\n  currency              String        @default(\"USD\")\n  method                String\n  paymentMethod         String?\n  transactionHash       String?\n  proofFileUrl          String?\n  bankDetails           String?\n  cryptoAddress         String?\n  depositAddress        String?\n  externalTransactionId String?\n  status                String        @default(\"pending\")\n  rejectionReason       String?\n  approvedBy            String?\n  approvedAt            DateTime?\n  rejectedAt            DateTime?\n  processedAt           DateTime?\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  mt5Account            MT5Account    @relation(\"deposits\", fields: [mt5AccountId], references: [id])\n  user                  User          @relation(\"deposits\", fields: [userId], references: [id])\n  transactions          Transaction[] @relation(\"transactions\")\n\n  @@index([userId])\n  @@index([mt5AccountId])\n  @@index([status])\n  @@index([createdAt])\n}\n\nmodel Withdrawal {\n  id                    String        @id @default(uuid())\n  userId                String\n  mt5AccountId          String\n  amount                Float\n  method                String\n  bankDetails           String?\n  cryptoAddress         String?\n  status                String        @default(\"pending\")\n  rejectionReason       String?\n  approvedBy            String?\n  approvedAt            DateTime?\n  rejectedAt            DateTime?\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  currency              String        @default(\"USD\")\n  externalTransactionId String?\n  paymentMethod         String?\n  processedAt           DateTime?\n  walletAddress         String?\n  transactions          Transaction[] @relation(\"transactions\")\n  mt5Account            MT5Account    @relation(\"withdrawals\", fields: [mt5AccountId], references: [id])\n  user                  User          @relation(\"withdrawals\", fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([mt5AccountId])\n  @@index([status])\n  @@index([createdAt])\n}\n\nmodel ActivityLog {\n  id        String   @id @default(uuid())\n  userId    String?\n  adminId   String\n  action    String\n  entity    String\n  entityId  String?\n  ipAddress String?\n  userAgent String?\n  oldValues String?\n  newValues String?\n  createdAt DateTime @default(now())\n  admin     User     @relation(\"activityLogs\", fields: [adminId], references: [id])\n}\n\nmodel SystemSetting {\n  id          String   @id @default(uuid())\n  key         String   @unique\n  value       String\n  category    String\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel Role {\n  id          String   @id @default(uuid())\n  name        String   @unique\n  permissions String\n  description String?\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\nmodel PaymentMethod {\n  id              String    @id @default(uuid())\n  userId          String\n  address         String\n  currency        String    @default(\"USDT\")\n  network         String    @default(\"TRC20\")\n  status          String    @default(\"pending\")\n  submittedAt     DateTime  @default(now())\n  approvedAt      DateTime?\n  approvedBy      String?\n  rejectionReason String?\n  createdAt       DateTime  @default(now())\n  updatedAt       DateTime  @updatedAt\n\n  @@index([userId])\n  @@index([status])\n}\n\nmodel UserRole {\n  id         String   @id @default(uuid())\n  userId     String\n  roleId     String\n  assignedAt DateTime @default(now())\n  assignedBy String\n}\n\nmodel DefaultMT5Account {\n  id           String     @id\n  userId       String     @unique\n  mt5AccountId String\n  createdAt    DateTime   @default(now())\n  updatedAt    DateTime\n  MT5Account   MT5Account @relation(fields: [mt5AccountId], references: [accountId])\n  User         User       @relation(fields: [userId], references: [id])\n\n  @@index([mt5AccountId])\n}\n\nmodel Instrument {\n  id           String         @id\n  symbol       String         @unique\n  name         String?\n  description  String?\n  category     String\n  group        String?\n  digits       Int            @default(5)\n  contractSize Float          @default(100000)\n  minVolume    Float          @default(0.01)\n  maxVolume    Float          @default(100)\n  volumeStep   Float          @default(0.01)\n  spread       Float          @default(0)\n  isActive     Boolean        @default(true)\n  tradingHours String?\n  lastUpdated  DateTime\n  createdAt    DateTime       @default(now())\n  updatedAt    DateTime\n  UserFavorite UserFavorite[]\n}\n\nmodel RefreshToken {\n  id        String    @id @db.VarChar\n  userId    String    @db.VarChar\n  token     String    @unique(map: \"ix_RefreshToken_token\") @db.VarChar\n  expiresAt DateTime  @db.Timestamptz(6)\n  createdAt DateTime? @default(now()) @db.Timestamptz(6)\n  revoked   Boolean?\n  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@index([expiresAt], map: \"ix_RefreshToken_expiresAt\")\n  @@index([userId], map: \"ix_RefreshToken_userId\")\n}\n\nmodel UserFavorite {\n  id           String     @id\n  userId       String\n  instrumentId String\n  sortOrder    Int        @default(0)\n  addedAt      DateTime   @default(now())\n  Instrument   Instrument @relation(fields: [instrumentId], references: [id])\n  User         User       @relation(fields: [userId], references: [id])\n\n  @@unique([userId, instrumentId])\n  @@index([instrumentId])\n  @@index([userId])\n}\n\nmodel admin {\n  id                        Int                         @id @default(autoincrement())\n  username                  String                      @unique @db.VarChar(255)\n  email                     String                      @unique @db.VarChar(255)\n  password_hash             String                      @db.VarChar(255)\n  admin_role                String?                     @default(\"admin\") @db.VarChar(50)\n  is_active                 Boolean?                    @default(true)\n  last_login                DateTime?                   @db.Timestamptz(6)\n  login_attempts            Int?                        @default(0)\n  locked_until              DateTime?                   @db.Timestamptz(6)\n  created_at                DateTime?                   @default(now()) @db.Timestamptz(6)\n  updated_at                DateTime?                   @default(now()) @db.Timestamptz(6)\n  admin_login_log           admin_login_log[]\n  balance_operation_history balance_operation_history[]\n}\n\nmodel admin_login_log {\n  id             Int      @id @default(autoincrement())\n  admin_id       Int\n  ip_address     String   @db.VarChar(45)\n  user_agent     String?\n  location       String?  @db.VarChar(255)\n  device         String?  @db.VarChar(255)\n  browser        String?  @db.VarChar(255)\n  os             String?  @db.VarChar(255)\n  success        Boolean  @default(true)\n  failure_reason String?  @db.VarChar(255)\n  created_at     DateTime @default(now()) @db.Timestamptz(6)\n  admin          admin    @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n\n  @@index([admin_id])\n  @@index([created_at])\n}\n\nmodel balance_operation_history {\n  id             Int      @id @default(autoincrement())\n  admin_id       Int\n  mt5_login      String   @db.VarChar(50)\n  operation_type String   @db.VarChar(50)\n  amount         Float\n  currency       String   @default(\"USD\") @db.VarChar(10)\n  description    String?\n  status         String   @default(\"completed\") @db.VarChar(20)\n  error_message  String?\n  ip_address     String?  @db.VarChar(45)\n  user_agent     String?\n  created_at     DateTime @default(now()) @db.Timestamptz(6)\n  admin          admin    @relation(fields: [admin_id], references: [id], onDelete: Cascade)\n\n  @@index([admin_id])\n  @@index([created_at])\n  @@index([mt5_login])\n  @@index([operation_type])\n}\n\nmodel chat_conversations {\n  id                 Int                 @id @default(autoincrement())\n  user_id            String              @db.VarChar(255)\n  user_name          String              @db.VarChar(255)\n  user_email         String              @db.VarChar(255)\n  admin_id           String?             @db.VarChar(255)\n  status             String?             @default(\"open\") @db.VarChar(20)\n  priority           String?             @default(\"normal\") @db.VarChar(20)\n  subject            String?             @db.VarChar(500)\n  last_message_at    DateTime?           @default(now()) @db.Timestamptz(6)\n  created_at         DateTime?           @default(now()) @db.Timestamptz(6)\n  updated_at         DateTime?           @default(now()) @db.Timestamptz(6)\n  closed_at          DateTime?           @db.Timestamptz(6)\n  closed_by          String?             @db.VarChar(255)\n  tags               String[]            @default([])\n  unread_count_admin Int?                @default(0)\n  unread_count_user  Int?                @default(0)\n  chat_messages      chat_messages[]\n  chat_participants  chat_participants[]\n}\n\nmodel chat_messages {\n  id                 Int                 @id @default(autoincrement())\n  conversation_id    Int?\n  sender_id          String              @db.VarChar(255)\n  sender_name        String              @db.VarChar(255)\n  sender_type        String              @db.VarChar(20)\n  message_type       String?             @default(\"text\") @db.VarChar(20)\n  content            String\n  metadata           Json?               @default(\"{}\")\n  is_read            Boolean?            @default(false)\n  read_at            DateTime?           @db.Timestamptz(6)\n  created_at         DateTime?           @default(now()) @db.Timestamptz(6)\n  updated_at         DateTime?           @default(now()) @db.Timestamptz(6)\n  chat_conversations chat_conversations? @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel chat_participants {\n  id                 Int                 @id @default(autoincrement())\n  conversation_id    Int?\n  user_id            String              @db.VarChar(255)\n  user_name          String              @db.VarChar(255)\n  user_type          String              @db.VarChar(20)\n  role               String?             @default(\"participant\") @db.VarChar(20)\n  joined_at          DateTime?           @default(now()) @db.Timestamptz(6)\n  left_at            DateTime?           @db.Timestamptz(6)\n  is_active          Boolean?            @default(true)\n  chat_conversations chat_conversations? @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@unique([conversation_id, user_id])\n}\n\nmodel group_commission_structures {\n  id                      Int       @id @default(autoincrement())\n  group_id                String    @db.VarChar(255)\n  structure_name          String    @db.VarChar(100)\n  usd_per_lot             Decimal   @default(0.00) @db.Decimal(10, 2)\n  spread_share_percentage Decimal   @default(0.00) @db.Decimal(5, 2)\n  is_active               Boolean   @default(true)\n  created_at              DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at              DateTime? @default(now()) @db.Timestamptz(6)\n\n  @@unique([group_id, structure_name])\n}\n\nmodel ib_admin {\n  id             Int       @id @default(autoincrement())\n  email          String    @unique @db.VarChar(255)\n  password_hash  String    @db.VarChar(255)\n  role           String?   @default(\"admin\") @db.VarChar(50)\n  is_active      Boolean?  @default(true)\n  last_login     DateTime? @db.Timestamptz(6)\n  login_attempts Int?      @default(0)\n  locked_until   DateTime? @db.Timestamptz(6)\n  created_at     DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at     DateTime? @default(now()) @db.Timestamptz(6)\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel ib_requests {\n  id                        Int                    @id @default(autoincrement())\n  full_name                 String                 @db.VarChar(255)\n  email                     String                 @unique @db.VarChar(255)\n  password_hash             String                 @db.VarChar(255)\n  status                    String                 @default(\"pending\") @db.VarChar(50)\n  ib_type                   String                 @default(\"common\") @db.VarChar(50)\n  submitted_at              DateTime?              @default(now()) @db.Timestamptz(6)\n  approved_at               DateTime?              @db.Timestamptz(6)\n  usd_per_lot               Decimal?               @db.Decimal(10, 2)\n  spread_percentage_per_lot Decimal?               @db.Decimal(5, 2)\n  admin_comments            String?\n  group_id                  String?                @db.VarChar(255)\n  structure_id              Int?\n  created_at                DateTime?              @default(now()) @db.Timestamptz(6)\n  updated_at                DateTime?              @default(now()) @db.Timestamptz(6)\n  ib_group_assignments      ib_group_assignments[]\n}\n\nmodel manual_gateway {\n  id          Int      @id @default(autoincrement())\n  type        String   @db.VarChar(50)\n  name        String   @db.VarChar(255)\n  details     String\n  icon_url    String?  @db.VarChar(500)\n  qr_code_url String?  @db.VarChar(500)\n  is_active   Boolean  @default(true)\n  created_at  DateTime @default(now()) @db.Timestamptz(6)\n  updated_at  DateTime @db.Timestamptz(6)\n\n  @@index([is_active])\n  @@index([type])\n}\n\nmodel mt5_groups {\n  id          Int       @id @default(autoincrement())\n  group_id    String    @unique @db.VarChar(255)\n  name        String    @db.VarChar(255)\n  description String?\n  synced_at   DateTime? @default(now()) @db.Timestamptz(6)\n  created_at  DateTime? @default(now()) @db.Timestamptz(6)\n  updated_at  DateTime? @default(now()) @db.Timestamptz(6)\n}\n\nmodel payment_gateway {\n  id                     Int      @id @default(autoincrement())\n  wallet_name            String   @db.VarChar(255)\n  deposit_wallet_address String   @db.VarChar(255)\n  api_key                String\n  secret_key             String\n  gateway_type           String   @db.VarChar(50)\n  is_active              Boolean  @default(true)\n  description            String?\n  created_at             DateTime @default(now()) @db.Timestamptz(6)\n  updated_at             DateTime @db.Timestamptz(6)\n\n  @@index([gateway_type])\n  @@index([is_active])\n}\n\nmodel symbols {\n  id            Int       @id @default(autoincrement())\n  symbol_name   String    @unique @db.VarChar(50)\n  description   String?\n  symbol_type   String?   @db.VarChar(20)\n  group_name    String?   @db.VarChar(100)\n  digits        Int?      @default(5)\n  spread        Float?    @default(0)\n  contract_size Int?      @default(100000)\n  profit_mode   String?   @default(\"forex\") @db.VarChar(20)\n  enable        Boolean?  @default(true)\n  swap_mode     String?   @default(\"disabled\") @db.VarChar(20)\n  swap_long     Float?    @default(0)\n  swap_short    Float?    @default(0)\n  swap3_day     String?   @default(\"wednesday\") @db.VarChar(10)\n  created_at    DateTime? @default(now()) @db.Timestamp(6)\n  updated_at    DateTime? @default(now()) @db.Timestamp(6)\n}\n\nmodel ib_group_assignments {\n  id                      Int          @id @default(autoincrement())\n  ib_request_id           Int?\n  group_id                String       @db.VarChar(255)\n  group_name              String?      @db.VarChar(255)\n  structure_id            Int?\n  structure_name          String?      @db.VarChar(255)\n  usd_per_lot             Decimal      @default(0) @db.Decimal(10, 2)\n  spread_share_percentage Decimal      @default(0) @db.Decimal(5, 2)\n  created_at              DateTime?    @default(now()) @db.Timestamptz(6)\n  updated_at              DateTime?    @default(now()) @db.Timestamptz(6)\n  ib_requests             ib_requests? @relation(fields: [ib_request_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel ib_trade_history {\n  id            String    @id\n  order_id      String    @unique\n  account_id    String\n  user_id       String?\n  ib_request_id Int?\n  symbol        String\n  order_type    String\n  volume_lots   Decimal   @db.Decimal\n  open_price    Decimal?  @db.Decimal\n  close_price   Decimal?  @db.Decimal\n  profit        Decimal?  @db.Decimal\n  ib_commission Decimal?  @default(0) @db.Decimal\n  take_profit   Decimal?  @db.Decimal\n  stop_loss     Decimal?  @db.Decimal\n  created_at    DateTime? @default(now()) @db.Timestamp(6)\n  updated_at    DateTime? @default(now()) @db.Timestamp(6)\n  synced_at     DateTime? @default(now()) @db.Timestamp(6)\n  group_id      String?\n\n  @@index([account_id], map: \"idx_ib_trade_account\")\n  @@index([group_id], map: \"idx_ib_trade_group\")\n  @@index([ib_request_id], map: \"idx_ib_trade_ib\")\n  @@index([symbol], map: \"idx_ib_trade_symbol\")\n  @@index([user_id], map: \"idx_ib_trade_user\")\n}\n\nmodel support_tickets {\n  id             Int       @id @default(autoincrement())\n  ticket_no      String    @unique @db.VarChar(50)\n  parent_id      String    @db.VarChar(255)\n  title          String    @db.VarChar(500)\n  description    String?   @db.Text\n  ticket_type    String?   @db.VarChar(100)\n  status         String    @default(\"New\") @db.VarChar(50)\n  priority       String    @default(\"normal\") @db.VarChar(20)\n  assigned_to    String?   @db.VarChar(255)\n  account_number String?   @db.VarChar(50)\n  tags           String[]  @default([])\n  created_at     DateTime  @default(now()) @db.Timestamptz(6)\n  updated_at     DateTime  @default(now()) @db.Timestamptz(6)\n  last_reply_at  DateTime?\n  closed_at      DateTime?\n  closed_by      String?   @db.VarChar(255)\n\n  @@index([parent_id])\n  @@index([status])\n  @@index([ticket_no])\n  @@index([created_at])\n}\n\nmodel support_ticket_replies {\n  id          Int      @id @default(autoincrement())\n  ticket_id   Int\n  reply_id    Int? // For nested replies\n  sender_id   String   @db.VarChar(255)\n  sender_name String   @db.VarChar(255)\n  sender_type String   @db.VarChar(20) // user, admin, system\n  content     String   @db.Text\n  is_internal Boolean  @default(false) // Internal notes visible only to admins\n  attachments String[] @default([]) // Array of file URLs\n  created_at  DateTime @default(now()) @db.Timestamptz(6)\n  updated_at  DateTime @default(now()) @db.Timestamptz(6)\n  is_read     Boolean  @default(false)\n\n  @@index([ticket_id])\n  @@index([reply_id])\n  @@index([created_at])\n}\n\nmodel support_articles {\n  id                Int       @id @default(autoincrement())\n  title             String    @db.VarChar(500)\n  slug              String    @unique @db.VarChar(500)\n  content           String    @db.Text\n  excerpt           String?   @db.VarChar(1000)\n  category          String    @db.VarChar(100)\n  tags              String[]\n  views             Int       @default(0)\n  helpful_count     Int       @default(0)\n  not_helpful_count Int       @default(0)\n  is_published      Boolean   @default(false)\n  author_id         String    @db.VarChar(255)\n  created_at        DateTime  @default(now()) @db.Timestamptz(6)\n  updated_at        DateTime  @default(now()) @db.Timestamptz(6)\n  published_at      DateTime?\n\n  @@index([slug])\n  @@index([category])\n  @@index([is_published])\n  @@index([created_at])\n}\n\nmodel support_faq {\n  id                Int      @id @default(autoincrement())\n  question          String   @db.VarChar(500)\n  answer            String   @db.Text\n  category          String   @db.VarChar(100)\n  tags              String[]\n  helpful_count     Int      @default(0)\n  not_helpful_count Int      @default(0)\n  display_order     Int      @default(0)\n  is_active         Boolean  @default(true)\n  created_at        DateTime @default(now()) @db.Timestamptz(6)\n  updated_at        DateTime @default(now()) @db.Timestamptz(6)\n\n  @@index([category])\n  @@index([is_active])\n  @@index([display_order])\n}\n\nmodel support_categories {\n  id            Int      @id @default(autoincrement())\n  name          String   @unique @db.VarChar(100)\n  slug          String   @unique @db.VarChar(100)\n  description   String?  @db.VarChar(500)\n  icon          String?  @db.VarChar(100)\n  display_order Int      @default(0)\n  is_active     Boolean  @default(true)\n  created_at    DateTime @default(now()) @db.Timestamptz(6)\n  updated_at    DateTime @default(now()) @db.Timestamptz(6)\n\n  @@index([slug])\n  @@index([is_active])\n}\n\nmodel support_replies {\n  id          Int      @id @default(autoincrement())\n  ticket_id   Int\n  sender_id   String   @db.VarChar(255)\n  sender_name String   @db.VarChar(255)\n  sender_type String   @db.VarChar(20)\n  content     String   @db.Text\n  is_internal Boolean  @default(false)\n  created_at  DateTime @default(now()) @db.Timestamptz(6)\n\n  @@index([ticket_id])\n}\n",
  "inlineSchemaHash": "94ce2df617c9ec1dcf9c9c3688fd8eff780320cab546a5b79c2cb238755e677e",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"clientId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"accounts\"},{\"name\":\"activityLogs\",\"kind\":\"object\",\"type\":\"ActivityLog\",\"relationName\":\"activityLogs\"},{\"name\":\"DefaultMT5Account\",\"kind\":\"object\",\"type\":\"DefaultMT5Account\",\"relationName\":\"DefaultMT5AccountToUser\"},{\"name\":\"deposits\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"deposits\"},{\"name\":\"kyc\",\"kind\":\"object\",\"type\":\"KYC\",\"relationName\":\"kyc\"},{\"name\":\"mt5Accounts\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"mt5Accounts\"},{\"name\":\"RefreshToken\",\"kind\":\"object\",\"type\":\"RefreshToken\",\"relationName\":\"RefreshTokenToUser\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"},{\"name\":\"UserFavorite\",\"kind\":\"object\",\"type\":\"UserFavorite\",\"relationName\":\"UserToUserFavorite\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"withdrawals\"}],\"dbName\":null},\"KYC\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isDocumentVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isAddressVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"verificationStatus\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amlReference\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"documentSubmittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"addressSubmittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"kyc\"}],\"dbName\":null},\"MT5Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"leverage\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"DefaultMT5Account\",\"kind\":\"object\",\"type\":\"DefaultMT5Account\",\"relationName\":\"DefaultMT5AccountToMT5Account\"},{\"name\":\"deposits\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"deposits\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"mt5Accounts\"},{\"name\":\"mt5Transactions\",\"kind\":\"object\",\"type\":\"MT5Transaction\",\"relationName\":\"mt5Transactions\"},{\"name\":\"withdrawals\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"withdrawals\"}],\"dbName\":null},\"MT5Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"mt5Transactions\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"balance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"accounts\"}],\"dbName\":null},\"Transaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"withdrawalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deposit\",\"kind\":\"object\",\"type\":\"Deposit\",\"relationName\":\"transactions\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"transactions\"},{\"name\":\"withdrawal\",\"kind\":\"object\",\"type\":\"Withdrawal\",\"relationName\":\"transactions\"}],\"dbName\":null},\"Deposit\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"proofFileUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cryptoAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depositAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"deposits\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"deposits\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"}],\"dbName\":null},\"Withdrawal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bankDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cryptoAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"externalTransactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"processedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"walletAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactions\",\"kind\":\"object\",\"type\":\"Transaction\",\"relationName\":\"transactions\"},{\"name\":\"mt5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"withdrawals\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"withdrawals\"}],\"dbName\":null},\"ActivityLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"adminId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entity\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"oldValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"newValues\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"activityLogs\"}],\"dbName\":null},\"SystemSetting\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PaymentMethod\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"network\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"UserRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"DefaultMT5Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mt5AccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"MT5Account\",\"kind\":\"object\",\"type\":\"MT5Account\",\"relationName\":\"DefaultMT5AccountToMT5Account\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DefaultMT5AccountToUser\"}],\"dbName\":null},\"Instrument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"group\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"digits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contractSize\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"minVolume\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"maxVolume\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"volumeStep\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"spread\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"tradingHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastUpdated\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"UserFavorite\",\"kind\":\"object\",\"type\":\"UserFavorite\",\"relationName\":\"InstrumentToUserFavorite\"}],\"dbName\":null},\"RefreshToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"revoked\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RefreshTokenToUser\"}],\"dbName\":null},\"UserFavorite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instrumentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sortOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"Instrument\",\"kind\":\"object\",\"type\":\"Instrument\",\"relationName\":\"InstrumentToUserFavorite\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserFavorite\"}],\"dbName\":null},\"admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"last_login\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"login_attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locked_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin_login_log\",\"kind\":\"object\",\"type\":\"admin_login_log\",\"relationName\":\"adminToadmin_login_log\"},{\"name\":\"balance_operation_history\",\"kind\":\"object\",\"type\":\"balance_operation_history\",\"relationName\":\"adminTobalance_operation_history\"}],\"dbName\":null},\"admin_login_log\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"browser\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"os\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"success\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"failure_reason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"admin\",\"relationName\":\"adminToadmin_login_log\"}],\"dbName\":null},\"balance_operation_history\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mt5_login\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"operation_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"error_message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ip_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_agent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"admin\",\"kind\":\"object\",\"type\":\"admin\",\"relationName\":\"adminTobalance_operation_history\"}],\"dbName\":null},\"chat_conversations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"admin_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subject\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_message_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closed_by\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"unread_count_admin\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unread_count_user\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"chat_messages\",\"kind\":\"object\",\"type\":\"chat_messages\",\"relationName\":\"chat_conversationsTochat_messages\"},{\"name\":\"chat_participants\",\"kind\":\"object\",\"type\":\"chat_participants\",\"relationName\":\"chat_conversationsTochat_participants\"}],\"dbName\":null},\"chat_messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"read_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"chat_conversations\",\"kind\":\"object\",\"type\":\"chat_conversations\",\"relationName\":\"chat_conversationsTochat_messages\"}],\"dbName\":null},\"chat_participants\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conversation_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joined_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"left_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"chat_conversations\",\"kind\":\"object\",\"type\":\"chat_conversations\",\"relationName\":\"chat_conversationsTochat_participants\"}],\"dbName\":null},\"group_commission_structures\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"structure_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usd_per_lot\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"spread_share_percentage\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ib_admin\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"last_login\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"login_attempts\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"locked_until\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ib_requests\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ib_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submitted_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"approved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"usd_per_lot\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"spread_percentage_per_lot\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"admin_comments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"structure_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ib_group_assignments\",\"kind\":\"object\",\"type\":\"ib_group_assignments\",\"relationName\":\"ib_group_assignmentsToib_requests\"}],\"dbName\":null},\"manual_gateway\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qr_code_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"mt5_groups\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"synced_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"payment_gateway\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"wallet_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deposit_wallet_address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"api_key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"secret_key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gateway_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"symbols\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symbol_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"symbol_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"group_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"digits\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"spread\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"contract_size\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"profit_mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"enable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"swap_mode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"swap_long\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"swap_short\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"swap3_day\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"ib_group_assignments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ib_request_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"group_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"structure_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"structure_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usd_per_lot\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"spread_share_percentage\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ib_requests\",\"kind\":\"object\",\"type\":\"ib_requests\",\"relationName\":\"ib_group_assignmentsToib_requests\"}],\"dbName\":null},\"ib_trade_history\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ib_request_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symbol\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"volume_lots\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"open_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"close_price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"profit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"ib_commission\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"take_profit\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"stop_loss\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"synced_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"group_id\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"support_tickets\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_no\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ticket_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"assigned_to\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"account_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"last_reply_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"closed_by\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"support_ticket_replies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reply_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_internal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"attachments\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"support_articles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"helpful_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"not_helpful_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_published\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"author_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"published_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"support_faq\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"helpful_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"not_helpful_count\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"display_order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"support_categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"icon\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"display_order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"support_replies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ticket_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sender_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sender_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_internal\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

